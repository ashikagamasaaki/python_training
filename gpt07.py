"""
問題61-70: 高度なPython

素数判定: 与えられた整数が素数かどうかを判定する関数 is_prime を実装してください。
フィボナッチ数列: n番目のフィボナッチ数を計算する関数 fibonacci を実装してください。
リスト内包表記: 1から100までの整数のうち、3と5の倍数の合計をリスト内包表記を使って計算してください。
最大公約数と最小公倍数: 与えられた2つの整数の最大公約数と最小公倍数を計算する関数を実装してください。
クラスと継承: 図形（Shape）とそのサブクラスとして円（Circle）と長方形（Rectangle）のクラスを作成してください。各図形は面積を計算するメソッドを持っている必要があります。
デコレーター: 関数にかかる時間を計測するデコレーターを実装してください。
再帰: フィボナッチ数を再帰を使って計算する関数を実装してください。
例外処理: 与えられたリストから特定の位置の要素を取得する関数を作成し、インデックスが存在しない場合は例外を処理してください。
ジェネレーター: 1からnまでの整数を生成するジェネレーターを実装してください。
アルゴリズム: 与えられたリストから最長の増加部分列を見つけるアルゴリズムを実装してください。
"""